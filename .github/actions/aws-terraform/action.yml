name: AWS Terraform
description: Runs Terraform against AWS
inputs:
  aws_deploy_region:
    description: "AWS region to deploy to"
    default: "ap-northeast-1"
    required: true
  terraform_state_s3_bucket:
    description: "S3 bucket for Terraform state"
    required: true
  terraform_state_s3_key_prefix:
    description: "S3 key prefix for Terraform state"
    required: true
  terraform_state_dynamodb_table:
    description: "DynamoDB table for Terraform state"
    required: true
  build_path:
    description: "Build path that contains the source"
    required: true
  environment:
    description: "Name of the environment e.g. dev, staging, prod"
    required: true
  branch:
    description: "Git branch being ran against"
    required: true
  amplify_custom_domain:
    description: "Custom domain for Amplify"
    required: true
  amplify_basic_auth_credentials:
    description: "Basic auth credentials for Amplify"
    required: true

runs:
  using: "composite"
  steps:
    - name: Check permissions
      id: permissions
      run: |
        chmod 777 *.sh
        chmod +x *.sh
        echo -e "\n"
      shell: bash
      working-directory: "${{ github.action_path }}"

    - name: Terraform Init
      id: init
      run: |
        ${{ github.action_path }}/box.sh "Running Terraform init"
        terraform init -backend-config="region=eu-west-1" -backend-config="dynamodb_table=${{ inputs.terraform_state_dynamodb_table }}" -backend-config="encrypt=true" -backend-config="workspace_key_prefix=${{ inputs.terraform_state_s3_key_prefix }}" -backend-config="bucket=${{ inputs.terraform_state_s3_bucket }}" -backend-config="key=${{ inputs.terraform_state_s3_key_prefix }}/${{ inputs.environment }}/terraform.tfstate"
        echo -e "Terraform S3 bucket: ${{ inputs.terraform_state_s3_bucket }}"
        echo -e "Terraform state file: ${{ inputs.terraform_state_s3_key_prefix }}/${{ inputs.environment }}/terraform.tfstate"
        echo -e "\n"
      shell: bash
      working-directory: "${{ inputs.build_path }}/infrastructure"

    - name: Terraform Validate
      id: validate
      run: |
        ${{ github.action_path }}/box.sh "Running Terraform validate"
        terraform validate
        echo -e "\n"
      shell: bash
      working-directory: "${{ inputs.build_path }}/infrastructure"

    - name: Terraform Plan
      id: plan
      run: |
        export TF_VAR_environment=${environment}
        ${{ github.action_path }}/box.sh "Running Terraform plan"
        plan_command="terraform plan -var-file='./environments/${{ inputs.environment }}/${{ inputs.environment }}.tfvars' -var 'region=${{ inputs.aws_deploy_region }}' -var 'amplify_custom_domain=${{inputs.amplify_custom_domain}}' -var 'amplify_basic_auth_credentials=${{inputs.amplify_basic_auth_credentials}}' -input=false -out=plan.out"
        if [ "${{ github.event_name }}" == "workflow_dispatch" ] || [ "${{ inputs.branch }}" == "develop" ]; then
          eval $plan_command
        else
          plan_command+=" -lock=false"
          eval $plan_command
        fi
        terraform show -no-color plan.out > plan.txt
        echo "TERRAFORM_PLAN<<EOF" >> $GITHUB_ENV
        cat plan.txt >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV
        plan_summary=$(grep -E 'Plan: [0-9]+ to add, [0-9]+ to change, [0-9]+ to destroy.' plan.txt)
        echo "TERRAFORM_PLAN_SUMMARY<<EOF" >> $GITHUB_ENV
        echo "$plan_summary" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV
        echo "SHORT_SHA=$(git rev-parse --short "$GITHUB_SHA")" >> $GITHUB_ENV
        echo -e "\n"
      shell: bash
      working-directory: "${{ inputs.build_path }}/infrastructure"

    - name: Terraform Apply
      id: apply
      run: |
        if [ "${{ github.event_name }}" == "workflow_dispatch" ] || [ "${{ inputs.branch }}" == "develop" ]; then
          ${{ github.action_path }}/box.sh "Running Terraform apply"
          terraform apply -auto-approve -input=false plan.out
        else
          echo -e "Not develop and not a workflow dispatch execution, so skipping Terraform apply."
        fi
        echo -e "Terraform run completed successfully."
      shell: bash
      working-directory: "${{ inputs.build_path }}/infrastructure"
